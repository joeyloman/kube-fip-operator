kind: Namespace
apiVersion: v1
metadata:
  name: kube-fip
  labels:
    app: kube-fip
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kube-fip-operator
  namespace: kube-fip
  labels:
    app: kube-fip
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kube-fip-read
  labels:
    app: kube-fip
rules:
- apiGroups: [""]
  resources:
  - namespaces
  - configmaps
  verbs: ["list", "watch"]
- apiGroups: ["kubefip.k8s.binbash.org"]
  resources:
  - floatingips
  - floatingipranges
  verbs: ["get", "list", "watch", "create", "update"]
- apiGroups: ["provisioning.cattle.io"]
  resources:
  - clusters
  verbs: ["get", "list"]
- apiGroups: ["management.cattle.io"]
  resources:
  - clusters
  verbs: ["get", "list"]
- apiGroups: ["rke-machine-config.cattle.io"]
  resources:
  - harvesterconfigs
  verbs: ["get", "list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kube-fip-read
  labels:
    app: kube-fip
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kube-fip-read
subjects:
- kind: ServiceAccount
  name: kube-fip-operator
  namespace: kube-fip
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: kube-fip-kubeconfig-read
  namespace: fleet-default
  labels:
    app: kube-fip
rules:
- apiGroups: [""]
  resources:
  - secrets
  verbs:
    - get
    - list
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: kube-fip-kubeconfig-read
  namespace: fleet-default
  labels:
    app: kube-fip
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: kube-fip-kubeconfig-read
subjects:
- kind: ServiceAccount
  name: kube-fip-operator
  namespace: kube-fip
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: kube-fip-clusterid-read
  namespace: cattle-global-data
  labels:
    app: kube-fip
rules:
- apiGroups: [""]
  resources:
  - secrets
  verbs:
    - get
    - list
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: kube-fip-clusterid-read
  namespace: cattle-global-data
  labels:
    app: kube-fip
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: kube-fip-clusterid-read
subjects:
- kind: ServiceAccount
  name: kube-fip-operator
  namespace: kube-fip
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: kube-fip
  namespace: kube-fip
  labels:
    app: kube-fip
rules:
- apiGroups: [""]
  resources:
  - configmaps
  verbs:
    - get
    - list
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: kube-fip
  namespace: kube-fip
  labels:
    app: kube-fip
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: kube-fip
subjects:
- kind: ServiceAccount
  name: kube-fip-operator
  namespace: kube-fip
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: kube-fip-config
  namespace: kube-fip
data:
  logLevel: "Info"
  traceIpamData: "false"
  kubevipUpdate: "false"
  operateGuestClusterInterval: "480"
  metricsPort: "8080"
  kubevipGuestInstall: "clusterlabel"
  kubevipNamespace: kube-system
  kubevipReleaseName: kube-vip
  kubevipChartRepoUrl: "https://kube-vip.github.io/helm-charts"
  kubevipChartValues: |
    config:
      vip_interface: enp1s0
    image:
      repository: plndr/kube-vip
      tag: v0.6.4
    env:
      prometheus_server: ':8080'
    nodeSelector:
      node-role.kubernetes.io/master: 'true'
    tolerations:
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
      operator: Exists
    - effect: NoSchedule
      key: node-role.kubernetes.io/control-plane
      operator: Exists
    - effect: NoExecute
      key: node-role.kubernetes.io/etcd
      operator: Exists
  kubevipCloudProviderReleaseName: kube-vip-cloud-provider
  kubevipCloudProviderChartValues: |
    image:
      repository: kubevip/kube-vip-cloud-provider
      tag: v0.0.7
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: kube-fip
  name: kube-fip-operator
  namespace: kube-fip
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: kube-fip
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: kube-fip
    spec:
      containers:
      - name: kube-fip-operator
        image: ghcr.io/joeyloman/kube-fip-operator:latest
        imagePullPolicy: IfNotPresent
        resources:
          requests:
            cpu: 200m
            memory: 128Mi
          limits:
            cpu: 1000m
            memory: 512Mi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccountName: kube-fip-operator
      terminationGracePeriodSeconds: 30
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: kube-fip
  name: kube-fip-metrics
  namespace: kube-fip
spec:
  selector:
    app: kube-fip
  ports:
    - name: metrics
      port: 8080
      protocol: TCP
      targetPort: 8080
  sessionAffinity: None
  type: ClusterIP
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  labels:
    app: kube-fip
  name: kube-fip-operator
  namespace: kube-fip
spec:
  endpoints:
    - port: metrics
      scheme: http
  jobLabel: jobLabel
  selector:
    matchLabels:
      app: kube-fip
